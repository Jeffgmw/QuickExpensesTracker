package com.example.quickexpensestracker.model

import android.icu.text.SimpleDateFormat // Import SimpleDateFormat for date formatting.
import androidx.room.Entity // Import Entity annotation for Room database.
import androidx.room.PrimaryKey // Import PrimaryKey annotation for defining primary key.
import java.text.NumberFormat // Import NumberFormat for currency formatting.
import java.util.* // Import java.util package for Date class.

@Entity(tableName = "transactions") // Define Entity annotation with table name "transactions".
data class Transaction( // Define Transaction data class for representing transaction entity.
    @PrimaryKey(autoGenerate = true) val id: Int, // Primary key auto-generated integer ID.
    val label: String, // Label for the transaction.
    val amount: Double, // Amount of the transaction.
    val description: String, // Description of the transaction.
    val date: Date // Date of the transaction.
)

fun Transaction.getFormattedDate(): String = // Define extension function to format transaction date.
    SimpleDateFormat("EEEE, dd MMM yyyy").format(date) // Format the date using SimpleDateFormat.

fun Transaction.getFormattedAmount(): String = // Define extension function to format transaction amount.
    NumberFormat.getCurrencyInstance().format(amount) // Format the amount using NumberFormat.

/*
Explanation of source of methods and their functionality:

1. SimpleDateFormat: This class is imported from the android.icu.text package and is used to format dates.

2. Entity: This annotation is imported from the androidx.room package and is used to specify that the Transaction class represents a table in the Room database. The tableName attribute specifies the name of the table as "transactions".

3. PrimaryKey: This annotation is imported from the androidx.room package and is used to specify the primary key of the table. In this case, the id property of the Transaction class is marked as the primary key, and autoGenerate = true indicates that the ID will be automatically generated by Room.

4. NumberFormat: This class is imported from the java.text package and is used to format numbers, such as currency amounts.

5. Date: This class is imported from the java.util package and represents a specific instant in time, with millisecond precision.

6. getFormattedDate(): This extension function formats the date of a Transaction object using a SimpleDateFormat with the pattern "EEEE, dd MMM yyyy", which represents the full day of the week, day of the month, abbreviated month name, and year.

7. getFormattedAmount(): This extension function formats the amount of a Transaction object using NumberFormat.getCurrencyInstance(), which formats the amount as currency according to the device's default locale.

 */